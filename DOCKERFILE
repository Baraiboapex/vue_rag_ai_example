
# Use an official NVIDIA CUDA image as the base.
# 'cudacores-11.8.0-runtime-ubuntu22.04' is a good, lightweight choice.
# The `runtime` images are smaller and contain only the necessary libraries for running CUDA applications.
# The `devel` images include the CUDA toolkit for compiling. Use the `devel` image if you need to build CUDA-enabled code.
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04 AS python_cuda

# Stage 1: Build the Python environment
# Use a Node.js base image that has build tools for both languages
FROM node:18-bullseye-slim AS build

# Set the working directory for the Python script
WORKDIR /app/python_scripts

# Install Python and Pip
RUN apt-get update && apt-get install -y python3 python3-pip

# Copy Python requirements and install
COPY ./python_scripts/requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Stage 2: Build the Node.js application
FROM node:18-bullseye-slim AS final

# Set the working directory for the Node.js app
WORKDIR /app

# Copy the Node.js files
COPY package.json package-lock.json ./
RUN npm install --production

# Copy the Node.js API and the Python scripts from the build stage
COPY . .
COPY --from=build /app/python_scripts /app/python_scripts

# Expose the port your Node.js API listens on
EXPOSE 3000

# Command to run the Node.js API
CMD ["node", "index.js"]